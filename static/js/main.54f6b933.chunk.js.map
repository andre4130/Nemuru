{"version":3,"sources":["assets/svg/rebel.svg","components/navbar/NavBar.jsx","assets/img/characters.png","assets/img/species.png","assets/img/league.png","assets/img/planets.png","assets/img/starships.png","components/homepage/Homepage.jsx","assets/svg/falcon.svg","components/loading/Loading.jsx","components/planets/Planets.jsx","components/species/Species.jsx","components/starships/Starships.jsx","components/filter/Filter.jsx","assets/svg/falcon_yellow_nofav.svg","assets/svg/star-wars.svg","components/loading/LoadingPlanet.jsx","components/characters/SingleCharacter.jsx","components/characters/Characters.jsx","components/myGalacticLeague/MyGalacticLeague.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","favourites","useState","length","number","setNumber","useEffect","Navbar","collapseOnSelect","expand","bg","variant","className","to","src","rebel","alt","style","height","Toggle","aria-controls","Collapse","id","Nav","color","fontSize","positionTop","textShadow","Homepage","characters","species","planets","starships","league","Loading","falcon","Planets","setError","setIsLoaded","setPlanets","currentPage","setCurrentPage","pages","setPages","goToNext","goToPrev","a","fetch","then","res","json","data","results","calc","Math","ceil","count","error","console","log","fetchFunction","planetList","map","planet","index","Card","text","Body","Title","name","Text","climate","terrain","population","Container","Button","onClick","disabled","borderRadius","CardColumns","Species","setSpecies","speciesList","specie","classification","designation","language","Starships","spaceships","setSpaceships","shipList","ship","model","manufacturer","Filter","setFiltered","setCharacters","charactersFiltered","filter","select","setFilter","setSelect","setIsFiltered","handleSelect","e","preventDefault","target","value","item","undefined","homeworld","filterList","Form","Group","controlId","Label","Control","as","onChange","handleFilter","character","starship","renderOutput","LoadingPlanet","star","SingleCharacter","handleFavourites","gender","startsWith","marginBottom","Characters","show","handleClose","addSpecies","buttonFlag","addStarships","speciesFlag","starshipsFlag","getStarship","starshipData","starshipArray","i","url","starshipID","push","Modal","bool","onHide","Header","closeButton","Footer","MyGalacticLeague","handleRemove","setFavourites","fav","mass","birth_year","renderFavlist","App","setStarships","JSON","parse","localStorage","getItem","isFiltered","planetFlag","setPlanetFlag","setSpeciesFlag","setStarshipsFlag","setShow","arraySpecies","arrayPlanets","arrayStarships","arrayCharacters","arrayAddPlanets","arrayAddSpecies","arrayAddStarships","fetchCharacters","temp","addPlanets","planetData","s","planetDataSecure","slice","join","obj","alert","speciesData","speciesDataSecure","starshipsData","fetchSpecies","fetchPlanets","fetchStarships","includes","arr","splice","window","setItem","stringify","path","exact","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54f6b933.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rebel.1da68372.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//MEDIA\r\nimport rebel from \"../../assets/svg/rebel.svg\";\r\n\r\nconst NavBar = ({ favourites }) => {\r\n  const [number, setNumber] = useState(favourites.length);\r\n\r\n  useEffect(() => {\r\n    setNumber(favourites.length);\r\n  }, [favourites]);\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      expand=\"lg\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      className=\"navbar\"\r\n    >\r\n      <Link to=\"/\">\r\n        <img src={rebel} alt=\"rebel\" style={{ height: \"50px\" }} />\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"ml-lg-4\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link className=\"navbar-dark navbar-nav nav-link\" to=\"/characters\">\r\n            Characters\r\n          </Link>\r\n          <Link className=\"navbar-dark navbar-nav nav-link\" to=\"/species\">\r\n            Species\r\n          </Link>\r\n          <Link className=\"navbar-dark navbar-nav nav-link\" to=\"/planets\">\r\n            Planets\r\n          </Link>\r\n          <Link className=\"navbar-nav nav-link\" to=\"/starships\">\r\n            Starships\r\n          </Link>\r\n          <Link className=\"navbar-nav nav-link\" to=\"/mygalacticleague\">\r\n            My Galactic League\r\n          </Link>\r\n          <div\r\n            style={{\r\n              color: \"#FEFFFC\",\r\n              fontSize: \"1rem\",\r\n              positionTop: \"2px\",\r\n              textShadow: \"0 0 10px #fff\",\r\n            }}\r\n          >\r\n            {number}\r\n          </div>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/characters.b488b1c3.png\";","export default __webpack_public_path__ + \"static/media/species.b0507b30.png\";","export default __webpack_public_path__ + \"static/media/league.28191ab0.png\";","export default __webpack_public_path__ + \"static/media/planets.9d5c4324.png\";","export default __webpack_public_path__ + \"static/media/starships.d2ab78d1.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport characters from \"../../assets/img/characters.png\";\r\nimport species from \"../../assets/img/species.png\";\r\nimport league from \"../../assets/img/league.png\";\r\nimport planets from \"../../assets/img/planets.png\";\r\nimport starships from \"../../assets/img/starships.png\";\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <div className=\"container-fluid d-flex\">\r\n      <div className=\"row d-inline-flex w-100 justify-content-center homepage wrap align-items-center\">\r\n        <div className=\"m-3 effect-home\">\r\n          <Link to=\"/characters\">\r\n            <img src={characters} className=\"homepage\" alt=\"\" />\r\n            <figcaption className=\"d-flex justify-content-center align-items-center\">\r\n              <h2>\r\n                <b className=\"box\">Characters</b>\r\n              </h2>\r\n            </figcaption>\r\n          </Link>\r\n        </div>\r\n        <div className=\"m-3 effect-home\">\r\n          <Link to=\"/species\">\r\n            <img src={species} className=\"homepage\" alt=\"\" />\r\n            <figcaption className=\"d-flex justify-content-center align-items-center\">\r\n              <h2>\r\n                <b className=\"box\">Species</b>\r\n              </h2>\r\n            </figcaption>\r\n          </Link>\r\n        </div>\r\n        <div className=\"m-3 effect-home\">\r\n          <Link to=\"/planets\">\r\n            <img src={planets} className=\"homepage\" alt=\"\" />\r\n            <figcaption className=\"d-flex justify-content-center align-items-center\">\r\n              <h2>\r\n                <b className=\"box\">Planets</b>\r\n              </h2>\r\n            </figcaption>\r\n          </Link>\r\n        </div>\r\n        <div className=\"m-3 effect-home\">\r\n          <Link to=\"/starships\">\r\n            <img src={starships} className=\"homepage\" alt=\"\" />\r\n            <figcaption className=\"d-flex justify-content-center align-items-center\">\r\n              <h2>\r\n                <b className=\"box\">Starships</b>\r\n              </h2>\r\n            </figcaption>\r\n          </Link>\r\n        </div>\r\n        <div className=\"m-3 effect-home\">\r\n          <Link to=\"/mygalacticleague\">\r\n            <img src={league} className=\"homepage\" alt=\"\" />\r\n            <figcaption className=\"d-flex justify-content-center align-items-center\">\r\n              <h2>\r\n                <b className=\"box\">My Galactic League</b>\r\n              </h2>\r\n            </figcaption>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","export default __webpack_public_path__ + \"static/media/falcon.2248d8eb.svg\";","import React from \"react\";\r\nimport falcon from \"../../assets/svg/falcon.svg\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"App-header\">\r\n      <img src={falcon} className=\"loading\" alt=\"loading\" />\r\n      <p>loading...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//COMPONENTS\r\nimport Loading from \"../loading/Loading\";\r\n\r\n//STYLING\r\nimport { Container, CardColumns, Card, Button } from \"react-bootstrap\";\r\n\r\nconst Planets = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [planets, setPlanets] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pages, setPages] = useState(\"?\");\r\n\r\n  const goToNext = () => setCurrentPage(currentPage + 1);\r\n\r\n  const goToPrev = () => setCurrentPage(currentPage - 1);\r\n\r\n  //this is the inital fetch, the dependency is an empty array, which means it will only fetch when the page is loaded\r\n  useEffect(() => {\r\n    fetch(\"https://swapi.dev/api/planets/?page=1\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          setPlanets(data.results);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n          console.log(\"error!\", error);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  //Fetch Function will fetch the server everytime the user changes the page\r\n  async function fetchFunction() {\r\n    await fetch(\"https://swapi.dev/api/planets/?page=\" + currentPage)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          setPlanets(data.results);\r\n          var calc = Math.ceil(data.count / 10);\r\n          setPages(calc);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n          console.log(\"error!\");\r\n        }\r\n      );\r\n  }\r\n\r\n  //Every time the user changes the page, the API is fetched to the corresponding fetch\r\n  useEffect(() => {\r\n    fetchFunction();\r\n  }, [currentPage]);\r\n\r\n  const planetList = planets.map((planet, index) => (\r\n    <Card key={index} bg=\"dark\" text=\"white\">\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <h3>\r\n            <b>{planet.name}</b>\r\n          </h3>\r\n        </Card.Title>\r\n        <Card.Text>\r\n          <b>Planet ID:</b> {index + 1}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <b>Climate:</b> {planet.climate}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <b>Terrain:</b> {planet.terrain}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <b>Population:</b> {planet.population}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  ));\r\n  return (\r\n    <Container className=\"MainPage mt-3\">\r\n      <div className=\"d-inline-flex w-100 justify-content-center mt-3\">\r\n        {currentPage === 1 ? (\r\n          <Button className=\"m-1\" onClick={() => goToPrev()} disabled>\r\n            Previous Page\r\n          </Button>\r\n        ) : (\r\n          <Button className=\"m-1\" onClick={() => goToPrev()}>\r\n            Previous Page\r\n          </Button>\r\n        )}\r\n        <div\r\n          className=\"d-flex m-1 p-2 bg-dark align-items-center\"\r\n          style={{ height: \"38px\", borderRadius: \"5px\" }}\r\n        >\r\n          {currentPage}/{pages}\r\n        </div>\r\n        {currentPage === pages ? (\r\n          <Button className=\"m-1\" onClick={() => goToNext()} disabled>\r\n            Next Page\r\n          </Button>\r\n        ) : (\r\n          <Button className=\"m-1\" onClick={() => goToNext()}>\r\n            Next Page\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <hr />\r\n      <Container>\r\n        {!planets.length ? (\r\n          <div className=\"d-inline-flex w-100 justify-content-center\">\r\n            <Loading />\r\n          </div>\r\n        ) : (\r\n          <CardColumns>{planetList}</CardColumns>\r\n        )}\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Planets;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//COMPONENTS\r\nimport Loading from \"../loading/Loading\";\r\n\r\n//STYLING\r\nimport { Container, CardColumns, Card, Button } from \"react-bootstrap\";\r\n\r\nconst Species = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [species, setSpecies] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pages, setPages] = useState(\"?\");\r\n\r\n  const goToNext = () => setCurrentPage(currentPage + 1);\r\n\r\n  const goToPrev = () => setCurrentPage(currentPage - 1);\r\n\r\n  //this is the inital fetch, the dependency is an empty array, which means it will only fetch when the page is loaded\r\n  useEffect(() => {\r\n    fetch(\"https://swapi.dev/api/species/?page=1\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          setSpecies(data.results);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n          console.log(\"error!\", error);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  //Fetch Function will fetch the server everytime the user changes the page\r\n  async function fetchFunction() {\r\n    await fetch(\"https://swapi.dev/api/species/?page=\" + currentPage)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          setSpecies(data.results);\r\n          var calc = Math.ceil(data.count / 10);\r\n          setPages(calc);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n          console.log(\"error!\");\r\n        }\r\n      );\r\n  }\r\n\r\n  //Every time the user changes the page, the API is fetched to the corresponding fetch\r\n  useEffect(() => {\r\n    fetchFunction();\r\n  }, [currentPage]);\r\n\r\n  const speciesList = species.map((specie, index) => (\r\n    <Card key={index} bg=\"dark\" text=\"white\">\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <h3>\r\n            <b>{specie.name}</b>\r\n          </h3>\r\n        </Card.Title>\r\n        <Card.Text>\r\n          <b>Classification:</b> {specie.classification}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <b>Designation:</b> {specie.designation}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <b>Language:</b> {specie.language}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  ));\r\n\r\n  return (\r\n    <Container className=\"MainPage mt-3\">\r\n      <div className=\"d-inline-flex w-100 justify-content-center mt-3\">\r\n        {currentPage === 1 ? (\r\n          <Button className=\"m-1\" onClick={() => goToPrev()} disabled>\r\n            Previous Page\r\n          </Button>\r\n        ) : (\r\n          <Button className=\"m-1\" onClick={() => goToPrev()}>\r\n            Previous Page\r\n          </Button>\r\n        )}\r\n        <div\r\n          className=\"d-flex m-1 p-2 bg-dark align-items-center\"\r\n          style={{ height: \"38px\", borderRadius: \"5px\" }}\r\n        >\r\n          {currentPage}/{pages}\r\n        </div>\r\n        {currentPage === pages ? (\r\n          <Button className=\"m-1\" onClick={() => goToNext()} disabled>\r\n            Next Page\r\n          </Button>\r\n        ) : (\r\n          <Button className=\"m-1\" onClick={() => goToNext()}>\r\n            Next Page\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <hr />\r\n      <Container>\r\n        {!species.length ? (\r\n          <div className=\"d-inline-flex w-100 justify-content-center\">\r\n            <Loading />\r\n          </div>\r\n        ) : (\r\n          <CardColumns>{speciesList}</CardColumns>\r\n        )}\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Species;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//COMPONENTS\r\nimport Loading from \"../loading/Loading\";\r\n\r\n//STYLING\r\nimport { Container, CardColumns, Card, Button } from \"react-bootstrap\";\r\n\r\nconst Starships = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [spaceships, setSpaceships] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pages, setPages] = useState(\"?\");\r\n\r\n  const goToNext = () => setCurrentPage(currentPage + 1);\r\n\r\n  const goToPrev = () => setCurrentPage(currentPage - 1);\r\n\r\n  //this is the inital fetch, the dependency is an empty array, which means it will only fetch when the page is loaded\r\n  useEffect(() => {\r\n    fetch(\"https://swapi.dev/api/starships/?page=1\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          setSpaceships(data.results);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n          console.log(\"error!\", error);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  //Fetch Function will fetch the server everytime the user changes the page\r\n  async function fetchFunction() {\r\n    await fetch(\"https://swapi.dev/api/starships/?page=\" + currentPage)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          setSpaceships(data.results);\r\n          var calc = Math.ceil(data.count / 10);\r\n          setPages(calc);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n          console.log(\"error!\");\r\n        }\r\n      );\r\n  }\r\n\r\n  //Every time the user changes the page, the API is fetched to the corresponding fetch\r\n  useEffect(() => {\r\n    fetchFunction();\r\n  }, [currentPage]);\r\n\r\n  const shipList = spaceships.map((ship, index) => (\r\n    <Card key={index} bg=\"dark\" text=\"white\">\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <h3>\r\n            <b>{ship.name}</b>\r\n          </h3>\r\n        </Card.Title>\r\n        <Card.Text>\r\n          <b>Model:</b> {ship.model}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          <b>Manufacturer:</b> {ship.manufacturer}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  ));\r\n\r\n  return (\r\n    <Container className=\"MainPage mt-3\">\r\n      <div className=\"d-inline-flex w-100 justify-content-center mt-3\">\r\n        {currentPage === 1 ? (\r\n          <Button className=\"m-1\" onClick={() => goToPrev()} disabled>\r\n            Previous Page\r\n          </Button>\r\n        ) : (\r\n          <Button className=\"m-1\" onClick={() => goToPrev()}>\r\n            Previous Page\r\n          </Button>\r\n        )}\r\n        <div\r\n          className=\"d-flex m-1 p-2 bg-dark align-items-center\"\r\n          style={{ height: \"38px\", borderRadius: \"5px\" }}\r\n        >\r\n          {currentPage}/{pages}\r\n        </div>\r\n        {currentPage === pages ? (\r\n          <Button className=\"m-1\" onClick={() => goToNext()} disabled>\r\n            Next Page\r\n          </Button>\r\n        ) : (\r\n          <Button className=\"m-1\" onClick={() => goToNext()}>\r\n            Next Page\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <hr />\r\n      <Container>\r\n        {!spaceships.length ? (\r\n          <div className=\"d-inline-flex w-100 justify-content-center\">\r\n            <Loading />\r\n          </div>\r\n        ) : (\r\n          <CardColumns>{shipList}</CardColumns>\r\n        )}\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Starships;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//STYLING\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst Filter = ({\r\n  planets,\r\n  species,\r\n  characters,\r\n  starships,\r\n  setCharacters,\r\n  charactersFiltered,\r\n  setFiltered,\r\n  filter,\r\n  select,\r\n  setFilter,\r\n  setSelect,\r\n  setIsFiltered,\r\n}) => {\r\n  const handleFilter = (e) => {\r\n    e.preventDefault();\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const handleSelect = (e) => {\r\n    e.preventDefault();\r\n    setSelect(e.target.value);\r\n  };\r\n\r\n  const filterList = () => {\r\n    switch (true) {\r\n      case filter === \"name\":\r\n        let name = characters.filter((item) => {\r\n          if (item !== undefined && item.name === select) {\r\n            return true;\r\n          }\r\n        });\r\n        setFiltered(name);\r\n        break;\r\n      case filter === \"homeworld\":\r\n        let homeworld = characters.filter((item) => {\r\n          if (item !== undefined && item.homeworld === select) {\r\n            return true;\r\n          }\r\n        });\r\n        setFiltered(homeworld);\r\n        break;\r\n      case filter === \"species\":\r\n        let species = characters.filter((item) => {\r\n          if (item !== undefined && item.species === select) {\r\n            return true;\r\n          }\r\n        });\r\n        setFiltered(species);\r\n        break;\r\n      case filter === \"starships\":\r\n        let starships = characters.filter((item) => {\r\n          if (item !== undefined && item.starships === select) {\r\n            return true;\r\n          }\r\n        });\r\n        setFiltered(starships);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const filterFlag = () => {\r\n    if (filter === \"\") {\r\n      setIsFiltered(false);\r\n    }\r\n    if (filter !== \"\") {\r\n      setIsFiltered(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterList();\r\n    filterFlag();\r\n  }, [filter, select]);\r\n\r\n  const renderOutput = () => {\r\n    switch (true) {\r\n      case filter === \"\":\r\n        return null;\r\n      case filter === \"homeworld\":\r\n        return (\r\n          <Form.Group controlId=\"filter\">\r\n            <Form.Label>Please Select a Planet</Form.Label>\r\n            <Form.Control as=\"select\" onChange={(e) => handleSelect(e)}>\r\n              <option value=\"\">Please select...</option>\r\n              {planets.map((planet) => {\r\n                return (\r\n                  <option key={planet} value={planet}>\r\n                    {planet}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        );\r\n      case filter === \"species\":\r\n        return (\r\n          <Form.Group controlId=\"filter\">\r\n            <Form.Label>Please Select a Specie</Form.Label>\r\n            <Form.Control as=\"select\" onChange={(e) => handleSelect(e)}>\r\n              <option value=\"\">Please select...</option>\r\n              {species.map((specie) => {\r\n                return (\r\n                  <option key={specie} value={specie}>\r\n                    {specie}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        );\r\n      case filter === \"name\":\r\n        return (\r\n          <Form.Group controlId=\"filter\">\r\n            <Form.Label>Please Select a Character</Form.Label>\r\n            <Form.Control as=\"select\" onChange={(e) => handleSelect(e)}>\r\n              <option value=\"\">Please select...</option>\r\n              {characters.map((character) => {\r\n                return (\r\n                  <option key={character.name} value={character.name}>\r\n                    {character.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        );\r\n      case filter === \"starships\":\r\n        return (\r\n          <Form.Group controlId=\"filter\">\r\n            <Form.Label>Please Select a Starship</Form.Label>\r\n            <Form.Control as=\"select\" onChange={(e) => handleSelect(e)}>\r\n              <option value=\"\">Please select...</option>\r\n              {starships.map((starship) => {\r\n                return (\r\n                  <option key={starship} value={starship}>\r\n                    {starship}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container d-flex p-0 m-0\">\r\n      <div className=\"col-5 pl-0 pr-2\">\r\n        <Form.Group controlId=\"filter\">\r\n          <Form.Label>Filter by</Form.Label>\r\n          <Form.Control as=\"select\" onChange={(e) => handleFilter(e)}>\r\n            <option value=\"\">All Characters</option>\r\n            <option value=\"homeworld\">Planets</option>\r\n            <option value=\"species\">Species</option>\r\n            <option value=\"name\">Characters</option>\r\n            <option value=\"starships\">Starships</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </div>\r\n      <div className=\"col-7 pl-2 pr-0\">{renderOutput()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","export default __webpack_public_path__ + \"static/media/falcon_yellow_nofav.d58e0732.svg\";","export default __webpack_public_path__ + \"static/media/star-wars.42a756c7.svg\";","import React from \"react\";\r\nimport star from \"../../assets/svg/star-wars.svg\";\r\n\r\nconst LoadingPlanet = () => {\r\n  return (\r\n    <div className=\"App-header d-inline-flex\">\r\n      <p>is loading...&nbsp;</p>\r\n      <img\r\n        src={star}\r\n        className=\"loading\"\r\n        alt=\"loading\"\r\n        style={{ height: \"20px\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingPlanet;\r\n","import React from \"react\";\r\n\r\n//STYLING\r\nimport { Card } from \"react-bootstrap\";\r\nimport falcon from \"../../assets/svg/falcon_yellow_nofav.svg\";\r\nimport LoadingPlanet from \"../loading/LoadingPlanet\";\r\n\r\nconst SingleCharacter = ({ character, index, handleFavourites }) => {\r\n  return (\r\n    <div>\r\n      <Card key={index} bg=\"dark\" text=\"white\">\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <h3 style={{ color: \"#ffe81f\" }}>\r\n              <b>{character.name}</b>\r\n            </h3>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <b>Height: </b> {character.height}\r\n          </Card.Text>\r\n          <Card.Text>\r\n            <b>Gender: </b> {character.gender}\r\n          </Card.Text>\r\n          <Card.Text>\r\n            <div className=\"d-inline-flex\">\r\n              <b>Planet: &nbsp;</b>\r\n              {character.homeworld.startsWith(\"http\") ? (\r\n                <LoadingPlanet />\r\n              ) : (\r\n                ` ${character.homeworld}`\r\n              )}\r\n            </div>\r\n          </Card.Text>\r\n          {character.species[0] === undefined ||\r\n          character.species[0].startsWith(\"http\") ? null : (\r\n            <Card.Text>\r\n              <div className=\"d-inline-flex\">\r\n                <b>Specie:&nbsp;</b>\r\n                {` ${character.species}`}\r\n              </div>\r\n            </Card.Text>\r\n          )}\r\n          {character.starships[0] === undefined ||\r\n          character.starships[0].startsWith(\"http\") ? null : (\r\n            <Card.Text>\r\n              <div className=\"d-inline-flex\">\r\n                <b>Starship:&nbsp;</b>\r\n                {` ${character.starships}`}\r\n              </div>\r\n            </Card.Text>\r\n          )}\r\n        </Card.Body>\r\n        <div className=\"d-flex justify-content-end m-3\">\r\n          <div\r\n            className=\"d-column-flex justify-content-end\"\r\n            onClick={() => handleFavourites(index)}\r\n          >\r\n            <p style={{ fontSize: \"0.7rem\", marginBottom: \"0\" }}>\r\n              Add to League\r\n            </p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <img src={falcon} alt=\"falcon\" className=\"fav-icon\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleCharacter;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//COMPONENTS\r\nimport Loading from \"../loading/Loading\";\r\nimport Filter from \"../filter/Filter\";\r\nimport SingleCharacter from \"./SingleCharacter\";\r\n\r\n//STYLING\r\nimport { Container, CardColumns, Modal, Button } from \"react-bootstrap\";\r\n\r\nconst Characters = ({\r\n  characters,\r\n  species,\r\n  planets,\r\n  starships,\r\n  setCharacters,\r\n  handleFavourites,\r\n  setIsFiltered,\r\n  charactersFiltered,\r\n  setFiltered,\r\n  show,\r\n  handleClose,\r\n  buttonFlag,\r\n  addSpecies,\r\n  addStarships,\r\n  speciesFlag,\r\n  starshipsFlag,\r\n}) => {\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [select, setSelect] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setFiltered(characters);\r\n  }, []);\r\n\r\n  const getStarship = (character) => {\r\n    const starshipData = character.starships;\r\n    var starshipArray = [];\r\n    if (starshipData.length > 0) {\r\n      for (let i = 0; i < starshipData.length; i++) {\r\n        var url = starshipData[i];\r\n        fetch(url)\r\n          .then((res) => res.json())\r\n          .then(\r\n            (data) => {\r\n              var starshipID = data.name;\r\n              starshipArray.push(starshipID);\r\n            },\r\n            (error) => {\r\n              console.log(\"error!\", error);\r\n            }\r\n          );\r\n      }\r\n    }\r\n    return (\r\n      <>\r\n        {starshipArray[0] === undefined ? (\r\n          <p>&nbsp;None</p>\r\n        ) : (\r\n          <ul>\r\n            {starshipArray.map((starship) => {\r\n              return (\r\n                <li key={starship}>\r\n                  <p>{starships[starship - 1]}</p>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Container>\r\n        <Filter\r\n          characters={characters}\r\n          species={species}\r\n          planets={planets}\r\n          starships={starships}\r\n          charactersFiltered={charactersFiltered}\r\n          setFiltered={setFiltered}\r\n          setCharacters={setCharacters}\r\n          filter={filter}\r\n          select={select}\r\n          setFilter={setFilter}\r\n          setSelect={setSelect}\r\n          setIsFiltered={setIsFiltered}\r\n        />\r\n        <div className=\"d-inline-flex mb-3\">\r\n          {!speciesFlag ? (\r\n            <Button className=\"mr-4\" onClick={() => addSpecies()}>\r\n              Load Species\r\n            </Button>\r\n          ) : null}\r\n\r\n          {!starshipsFlag ? (\r\n            <Button className=\"mr-4\" onClick={() => addStarships()}>\r\n              Load Starships\r\n            </Button>\r\n          ) : null}\r\n        </div>\r\n\r\n        {!characters.length ? (\r\n          <div className=\"d-inline-flex w-100 justify-content-center\">\r\n            <Loading />\r\n          </div>\r\n        ) : (\r\n          <CardColumns>\r\n            {filter !== \"\"\r\n              ? charactersFiltered.map((character, index) => (\r\n                  <SingleCharacter\r\n                    key={character.name}\r\n                    character={character}\r\n                    index={index}\r\n                    id={character.name}\r\n                    getStarship={getStarship}\r\n                    handleFavourites={handleFavourites}\r\n                  />\r\n                ))\r\n              : characters.map((character, index) => (\r\n                  <SingleCharacter\r\n                    key={character.name}\r\n                    character={character}\r\n                    index={index}\r\n                    id={character.name}\r\n                    getStarship={getStarship}\r\n                    handleFavourites={handleFavourites}\r\n                  />\r\n                ))}\r\n          </CardColumns>\r\n        )}\r\n      </Container>\r\n      <Modal show={show.bool} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>My Galactic League</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {show.character} has been added to My Galactic League\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//STYLING\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nconst MyGalacticLeague = ({\r\n  characters,\r\n  favourites,\r\n  setFavourites,\r\n  handleRemove,\r\n}) => {\r\n  const renderFavlist = () => {\r\n    switch (true) {\r\n      case !favourites.length:\r\n        return (\r\n          <div className=\"container empty-list\">\r\n            <h3>Your Galactic League is currently empty</h3>\r\n            <div>\r\n              <p>\r\n                Go to <Link to=\"/characters\">&nbsp;Characters&nbsp;</Link> page\r\n                and add characters to your Team\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div className=\"container d-flex-column w-75\">\r\n            {favourites.map((fav, index) => {\r\n              return (\r\n                <div className=\"container py-2\" key={index}>\r\n                  <Card index={fav.name} bg=\"dark\">\r\n                    <Card.Header as=\"h5\" style={{ color: \"whitesmoke\" }}>\r\n                      Number {index + 1} of your Galactic League\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      <Card.Title>\r\n                        <b>{fav.name}</b>\r\n                      </Card.Title>\r\n                      <Card.Text>\r\n                        <p>Height: {fav.height}</p>\r\n                      </Card.Text>\r\n                      <Card.Text>\r\n                        <p>Mass: {fav.mass}</p>\r\n                      </Card.Text>\r\n                      <Card.Text>\r\n                        <p>Birth: {fav.birth_year}</p>\r\n                      </Card.Text>\r\n                      <Card.Text>\r\n                        <p>Planet: {fav.homeworld}</p>\r\n                      </Card.Text>\r\n                      <div className=\"d-flex justify-content-end\">\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          value={fav.name}\r\n                          onClick={(e) => handleRemove(e)}\r\n                        >\r\n                          Remove\r\n                        </Button>\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container d-flex-column justify-content-center text-justify-center\">\r\n      <div className=\"d-flex justify-content-center mt-3\">\r\n        <h2>\r\n          <b>Welcome to My Galactic League</b>\r\n        </h2>\r\n      </div>\r\n      {renderFavlist()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyGalacticLeague;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n//COMPONENTS\r\nimport NavBar from \"./components/navbar/NavBar\";\r\nimport Homepage from \"./components/homepage/Homepage\";\r\nimport Planets from \"./components/planets/Planets\";\r\nimport Species from \"./components/species/Species\";\r\nimport Starships from \"./components/starships/Starships\";\r\nimport Characters from \"./components/characters/Characters\";\r\nimport MyGalacticLeague from \"./components/myGalacticLeague/MyGalacticLeague\";\r\n\r\nfunction App() {\r\n  //Fetching of the API information\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [species, setSpecies] = useState([]);\r\n  const [planets, setPlanets] = useState([]);\r\n  const [starships, setStarships] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [favourites, setFavourites] = useState(\r\n    JSON.parse(localStorage.getItem(\"favList\")) || []\r\n  );\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n  const [charactersFiltered, setFiltered] = useState([]);\r\n\r\n  //planetFlag is set to true to trigger the function that fills the array with the name of the planet\r\n  const [planetFlag, setPlanetFlag] = useState(false);\r\n  const [speciesFlag, setSpeciesFlag] = useState(false);\r\n  const [starshipsFlag, setStarshipsFlag] = useState(false);\r\n  const [buttonFlag, setButtonFlag] = useState(false);\r\n  const [show, setShow] = useState({\r\n    bool: false,\r\n    character: \"\",\r\n  });\r\n\r\n  var arraySpecies = [];\r\n  var arrayPlanets = [];\r\n  var arrayStarships = [];\r\n  var arrayCharacters = [];\r\n  var arrayAddPlanets = [];\r\n  var arrayAddSpecies = [];\r\n  var arrayAddStarships = [];\r\n\r\n  //First function that fetches the list of the characters and adds to a State\r\n  const fetchCharacters = async () => {\r\n    for (let i = 1; i < 10; i++) {\r\n      await fetch(`https://swapi.dev/api/people/?page=${i}`)\r\n        .then((res) => res.json())\r\n        .then(\r\n          (data) => {\r\n            var temp = data.results;\r\n            for (let i = 0; i < temp.length; i++) {\r\n              arrayCharacters.push(temp[i]);\r\n            }\r\n          },\r\n          (error) => {\r\n            var temp = \"\";\r\n            arrayCharacters.push(temp);\r\n            setIsLoaded(true);\r\n            setError(error);\r\n            console.log(\"error!\", error);\r\n          }\r\n        );\r\n    }\r\n    setCharacters(arrayCharacters);\r\n    setPlanetFlag(true);\r\n  };\r\n\r\n  //This function fetches the planet name where the character belongs\r\n  //and adds it to the state\r\n  const addPlanets = async () => {\r\n    for (let i = 0; i < characters.length; i++) {\r\n      const planetData = characters[i].homeworld;\r\n      var s = \"s\";\r\n      var position = 4;\r\n      var planetDataSecure = [\r\n        planetData.slice(0, position),\r\n        s,\r\n        planetData.slice(position),\r\n      ].join(\"\");\r\n      await fetch(planetDataSecure)\r\n        .then((res) => res.json())\r\n        .then(\r\n          (data) => {\r\n            var temp = data.name;\r\n            var obj = { ...characters[i], homeworld: temp };\r\n            arrayAddPlanets.push(obj);\r\n          },\r\n          (error) => {\r\n            console.log(\"error!\", error);\r\n          }\r\n        );\r\n    }\r\n    setCharacters(arrayAddPlanets);\r\n  };\r\n\r\n  const addSpecies = async () => {\r\n    alert(\"Characters' species will now be loaded, please wait...\");\r\n    for (let i = 0; i < characters.length; i++) {\r\n      const speciesData = characters[i].species[0];\r\n      if (speciesData === undefined) {\r\n        var temp = \"No Information\";\r\n        var obj = { ...characters[i], species: temp };\r\n        arrayAddSpecies.push(obj);\r\n      } else {\r\n        var s = \"s\";\r\n        var position = 4;\r\n        var speciesDataSecure = [\r\n          speciesData.slice(0, position),\r\n          s,\r\n          speciesData.slice(position),\r\n        ].join(\"\");\r\n        await fetch(speciesDataSecure)\r\n          .then((res) => res.json())\r\n          .then(\r\n            (data) => {\r\n              var temp = data.name;\r\n              var obj = { ...characters[i], species: temp };\r\n              arrayAddSpecies.push(obj);\r\n            },\r\n            (error) => {\r\n              console.log(\"error!\", error);\r\n            }\r\n          );\r\n      }\r\n    }\r\n    setSpeciesFlag(true);\r\n    setCharacters(arrayAddSpecies);\r\n  };\r\n\r\n  const addStarships = async () => {\r\n    alert(\"Characters' starships will now be loaded,, please wait...\");\r\n    for (let i = 0; i < characters.length; i++) {\r\n      const starshipsData = characters[i].starships[0];\r\n      if (starshipsData === undefined) {\r\n        var temp = \"No Information\";\r\n        var obj = { ...characters[i], starships: temp };\r\n        arrayAddStarships.push(obj);\r\n      } else {\r\n        var s = \"s\";\r\n        var position = 4;\r\n        var speciesDataSecure = [\r\n          starshipsData.slice(0, position),\r\n          s,\r\n          starshipsData.slice(position),\r\n        ].join(\"\");\r\n        await fetch(speciesDataSecure)\r\n          .then((res) => res.json())\r\n          .then(\r\n            (data) => {\r\n              var temp = data.name;\r\n              var obj = { ...characters[i], starships: temp };\r\n              arrayAddStarships.push(obj);\r\n            },\r\n            (error) => {\r\n              console.log(\"error!\", error);\r\n            }\r\n          );\r\n      }\r\n    }\r\n    setStarshipsFlag(true);\r\n    setCharacters(arrayAddStarships);\r\n  };\r\n\r\n  //Species fetching for the corresponding Section\r\n  const fetchSpecies = async () => {\r\n    for (let i = 1; i < 5; i++) {\r\n      await fetch(`https://swapi.dev/api/species/?page=${i}`)\r\n        .then((res) => res.json())\r\n        .then(\r\n          (data) => {\r\n            var temp = data.results;\r\n            for (let i = 0; i < temp.length; i++) {\r\n              arraySpecies.push(temp[i].name);\r\n            }\r\n          },\r\n          (error) => {\r\n            var temp = \"\";\r\n            arraySpecies.push(temp);\r\n            setIsLoaded(true);\r\n            setError(error);\r\n            console.log(\"error!\", error);\r\n          }\r\n        );\r\n    }\r\n    setSpecies(arraySpecies);\r\n  };\r\n\r\n  //Planets fetching for the corresponding Section\r\n  const fetchPlanets = async () => {\r\n    for (let i = 1; i < 7; i++) {\r\n      await fetch(`https://swapi.dev/api/planets/?page=${i}`)\r\n        .then((res) => res.json())\r\n        .then(\r\n          (data) => {\r\n            var temp = data.results;\r\n            for (let i = 0; i < temp.length; i++) {\r\n              arrayPlanets.push(temp[i].name);\r\n            }\r\n          },\r\n          (error) => {\r\n            var temp = \"\";\r\n            arrayPlanets.push(temp);\r\n            setIsLoaded(true);\r\n            setError(error);\r\n            console.log(\"error!\", error);\r\n          }\r\n        );\r\n    }\r\n    setPlanets(arrayPlanets);\r\n  };\r\n\r\n  //Starships fetching for the corresponding Section\r\n  const fetchStarships = async () => {\r\n    for (let i = 1; i < 5; i++) {\r\n      await fetch(`https://swapi.dev/api/starships/?page=${i}`)\r\n        .then((res) => res.json())\r\n        .then(\r\n          (data) => {\r\n            var temp = data.results;\r\n            for (let i = 0; i < temp.length; i++) {\r\n              arrayStarships.push(temp[i].name);\r\n            }\r\n          },\r\n          (error) => {\r\n            var temp = \"\";\r\n            arrayStarships.push(temp);\r\n            setIsLoaded(true);\r\n            setError(error);\r\n            console.log(\"error!\", error);\r\n          }\r\n        );\r\n    }\r\n    setStarships(arrayStarships);\r\n  };\r\n\r\n  //Function to filter the favourites\r\n  const handleFavourites = (i) => {\r\n    if (!isFiltered) {\r\n      if (!favourites.length) {\r\n        setFavourites([characters[i]]);\r\n        setShow({ bool: true, character: characters[i].name });\r\n      }\r\n      if (favourites.length > 9) {\r\n        alert(\"Your List of Favourites has reached the limit of 10 characters\");\r\n        return;\r\n      }\r\n      if (characters[i] && !favourites.includes(characters[i])) {\r\n        setFavourites([...favourites, characters[i]]);\r\n        setShow({ bool: true, character: characters[i].name });\r\n      } else if (favourites.includes(characters[i])) {\r\n        alert(`${characters[i].name} is already included in your Favourites`);\r\n      }\r\n    }\r\n    if (isFiltered) {\r\n      if (!favourites.length) {\r\n        setFavourites([charactersFiltered[i]]);\r\n        setShow({ bool: true, character: charactersFiltered[i].name });\r\n      }\r\n      if (favourites.length > 9) {\r\n        alert(\"Your List of Favourites has reached the limit of 10 characters\");\r\n        return;\r\n      }\r\n      if (characters[i] && !favourites.includes(charactersFiltered[i])) {\r\n        setFavourites([...favourites, charactersFiltered[i]]);\r\n        setShow({ bool: true, character: charactersFiltered[i].name });\r\n      } else if (favourites.includes(charactersFiltered[i])) {\r\n        alert(\r\n          `${charactersFiltered[i].name} is already included in your Favourites`\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  //Function to remove characters from the Galactic League\r\n  const handleRemove = (e) => {\r\n    var arr = [...favourites];\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i].name === e.target.value) {\r\n        arr.splice(i, 1);\r\n        setFavourites(arr);\r\n        window.localStorage.setItem(\"favList\", JSON.stringify(arr));\r\n      }\r\n    }\r\n  };\r\n\r\n  //Function to close the Modal on the Characters list\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  //Storaging the List of Favourites on the Local Storage\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"favList\", JSON.stringify(favourites));\r\n  }, [favourites]);\r\n\r\n  useEffect(() => {\r\n    fetchSpecies();\r\n    fetchPlanets();\r\n    fetchStarships();\r\n    fetchCharacters();\r\n    // addSpecies();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    addPlanets();\r\n  }, [planetFlag]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div>\r\n          <NavBar favourites={favourites} />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Homepage} />\r\n            <Route path=\"/planets\" exact component={Planets} />\r\n            <Route path=\"/species\" exact component={Species} />\r\n            <Route\r\n              path=\"/characters\"\r\n              render={() => (\r\n                <Characters\r\n                  characters={characters}\r\n                  species={species}\r\n                  planets={planets}\r\n                  starships={starships}\r\n                  favourites={favourites}\r\n                  charactersFiltered={charactersFiltered}\r\n                  setIsFiltered={setIsFiltered}\r\n                  setCharacters={setCharacters}\r\n                  setFavourites={setFavourites}\r\n                  handleFavourites={handleFavourites}\r\n                  setFiltered={setFiltered}\r\n                  show={show}\r\n                  handleClose={handleClose}\r\n                  planetFlag={planetFlag}\r\n                  buttonFlag={buttonFlag}\r\n                  speciesFlag={speciesFlag}\r\n                  setStarshipsFlag={setStarshipsFlag}\r\n                  starshipsFlag={starshipsFlag}\r\n                  addStarships={addStarships}\r\n                  addSpecies={addSpecies}\r\n                />\r\n              )}\r\n            />\r\n            <Route path=\"/starships\" exact component={Starships} />\r\n            <Route\r\n              path=\"/mygalacticleague\"\r\n              render={() => (\r\n                <MyGalacticLeague\r\n                  characters={characters}\r\n                  favourites={favourites}\r\n                  setFavourites={setFavourites}\r\n                  handleFavourites={handleFavourites}\r\n                  handleRemove={handleRemove}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}